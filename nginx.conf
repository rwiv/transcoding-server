daemon off;

error_log /dev/stdout info;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application stream {
            live on;

            on_publish http://host.docker.internal:8080/rest/live/publish;
            on_publish_done http://host.docker.internal:8080/rest/live/publish_done;

            exec ffmpeg -i rtmp://localhost:1935/stream/$name
#              -c:a aac -ar 48000 -ac 2 -b:a 192k -c:v libx264 -b:v 15000k -f flv -g 30 -r 30 -s 2560x1440 rtmp://localhost:1935/hls/$name_1440p
#              -c:a aac -ar 48000 -ac 2 -b:a 192k -c:v libx264 -b:v 8000k -f flv -g 30 -r 30 -s 1920x1080 rtmp://localhost:1935/hls/$name_1080p
              -c:a aac -ar 48000 -ac 2 -b:a 192k -c:v libx264 -b:v 5000k -f flv -g 30 -r 30 -s 1280x720 rtmp://localhost:1935/hls/$name_720p
#              -c:a aac -ar 48000 -ac 2 -b:a 192k -c:v libx264 -b:v 1500k -f flv -g 30 -r 30 -s 854x480 rtmp://localhost:1935/hls/$name_480p
#              -c:a aac -ar 48000 -ac 2 -b:a 192k -c:v libx264 -b:v 800k -f flv -g 30 -r 30 -s 640x360 rtmp://localhost:1935/hls/$name_360p
              -c:a aac -ar 48000 -ac 2 -b:a 64k -c:v libx264 -b:v 128k -f flv -g 15 -r 15 -s 256x144 rtmp://localhost:1935/hls/$name_144p;
        }

        application hls {
            live on;
            hls on;
            hls_fragment_naming system;
            hls_fragment 5;
            hls_playlist_length 10;
            hls_path /opt/data/hls;
            hls_nested on;

#            hls_variant _1440p BANDWIDTH=15128000,RESOLUTION=2560x1440;
#            hls_variant _1080p BANDWIDTH=8128000,RESOLUTION=1920x1080;
            hls_variant _720p BANDWIDTH=5128000,RESOLUTION=1280x720;
#            hls_variant _480p BANDWIDTH=1628000,RESOLUTION=854x480;
#            hls_variant _360p BANDWIDTH=928000,RESOLUTION=640x360;
            hls_variant _144p BANDWIDTH=256000,RESOLUTION=256x144;
        }
    }
}

http {
    root /www/static;
    sendfile off;
    tcp_nopush on;
    server_tokens off;
    access_log /dev/stdout combined;

    # Uncomment these lines to enable SSL.
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 1d;

    server {
        listen 8081;

        # Uncomment these lines to enable SSL.
        # Update the ssl paths with your own certificate and private key.
            
        # listen 443 ssl;
        # ssl_certificate     /opt/certs/example.com.crt;
        # ssl_certificate_key /opt/certs/example.com.key;

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /opt/data;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        location /live {
          alias /opt/data/hls;
          types {
              application/vnd.apple.mpegurl m3u8;
              video/mp2t ts;
          }
          add_header Cache-Control no-cache;
          add_header Access-Control-Allow-Origin *;
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /www/static;
        }

        location /crossdomain.xml {
            default_type text/xml;
            expires 24h;
        }
    }
}
