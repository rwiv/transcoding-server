ARG NGINX_VERSION=1.23.1
ARG NGINX_RTMP_VERSION=1.2.2
ARG FFMPEG_VERSION=7.0

##############################
# Build the NGINX-build image.
FROM ubuntu:22.04 as build-nginx
ARG NGINX_VERSION
ARG NGINX_RTMP_VERSION
ARG MAKEFLAGS="-j4"

# Build dependencies.
RUN apt update && apt install -y --no-install-recommends\
  build-essential \
  cmake \
  ca-certificates \
  curl \
  gcc \
  libc-dev \
  make \
  musl-dev \
  openssl \
  libssl-dev \
  libpcre3 \
  libpcre3-dev \
  pkg-config \
  zlib1g-dev \
  wget && \
  rm -rf /var/lib/apt/lists/*

WORKDIR /tmp

# Get nginx source.
RUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
  tar zxf nginx-${NGINX_VERSION}.tar.gz && \
  rm nginx-${NGINX_VERSION}.tar.gz

# Get nginx-rtmp module.
RUN wget https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_VERSION}.tar.gz && \
  tar zxf v${NGINX_RTMP_VERSION}.tar.gz && \
  rm v${NGINX_RTMP_VERSION}.tar.gz

# Compile nginx with nginx-rtmp module.
WORKDIR /tmp/nginx-${NGINX_VERSION}
RUN \
  ./configure \
  --prefix=/usr/local/nginx \
  --add-module=/tmp/nginx-rtmp-module-${NGINX_RTMP_VERSION} \
  --conf-path=/etc/nginx/nginx.conf \
  --with-threads \
  --with-file-aio \
  --with-http_ssl_module \
  --with-debug \
  --with-http_stub_status_module \
  --with-cc-opt="-Wimplicit-fallthrough=0" && \
  make && \
  make install

##########################
# Build the release image.
FROM nvidia/cuda:12.1.0-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Update and install necessary packages
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    yasm \
    nasm \
    libx264-dev \
    libx265-dev \
    libnuma-dev \
    libvpx-dev \
    libfdk-aac-dev \
    libmp3lame-dev \
    libopus-dev \
    libass-dev \
    libfreetype6-dev \
    libvorbis-dev \
    libxcb1-dev \
    libxcb-shm0-dev \
    libxcb-xfixes0-dev \
    texinfo \
    zlib1g-dev \
    libunistring-dev
#    && apt-get clean \
#    && rm -rf /var/lib/apt/lists/*

# Install NVENC SDK
RUN git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git /tmp/nv-codec-headers && \
    cd /tmp/nv-codec-headers && \
    make && \
    make install && \
    rm -rf /tmp/nv-codec-headers

# Download and build FFmpeg
RUN git clone https://git.ffmpeg.org/ffmpeg.git /tmp/ffmpeg && \
    cd /tmp/ffmpeg && \
    ./configure --prefix=/usr/local \
      --enable-nonfree \
      --enable-cuda \
      --enable-cuvid \
      --enable-nvenc \
      --enable-libnpp \
      --extra-cflags=-I/usr/local/cuda/include \
      --extra-ldflags=-L/usr/local/cuda/lib64 \
      --extra-libs=-lpthread \
      --extra-libs=-lm \
      --enable-gpl \
      --enable-libass \
      --enable-libfdk-aac \
      --enable-libfreetype \
      --enable-libmp3lame \
      --enable-libopus \
      --enable-libvorbis \
      --enable-libvpx \
      --enable-libx264 \
      --enable-libx265 && \
    make -j$(nproc) && \
    make install && \
    rm -rf /tmp/ffmpeg

# Set PATH
ENV PATH /usr/local/bin:$PATH

# Set default ports.
ENV HTTP_PORT 80
ENV HTTPS_PORT 443
ENV RTMP_PORT 1935

RUN apt update && apt install -y --no-install-recommends \
  ca-certificates \
  curl \
  gettext \
  libpcre3-dev \
  libtheora0 \
  openssl \
  rtmpdump && \
  rm -rf /var/lib/apt/lists/*

COPY --from=build-nginx /usr/local/nginx /usr/local/nginx
COPY --from=build-nginx /etc/nginx /etc/nginx
#COPY --from=build-ffmpeg /usr/local /usr/local
#COPY --from=build-ffmpeg /usr/lib/x86_64-linux-gnu/libfdk-aac.so.2 /usr/lib/x86_64-linux-gnu/libfdk-aac.so.2

# Add NGINX path, config and static files.
ENV PATH "${PATH}:/usr/local/nginx/sbin"
COPY nginx.conf /etc/nginx/nginx.conf.template
#RUN mkdir -p /opt/data && mkdir /www
#COPY static /www/static

EXPOSE 1935
EXPOSE 80

CMD envsubst "$(env | sed -e 's/=.*//' -e 's/^/\$/g')" < \
  /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && \
  nginx
